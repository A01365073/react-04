{"version":3,"sources":["components/AddCategory.js","helpers/getgifs.js","GifGridItem.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getgifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,sBAAMC,SARQ,SAACC,GACfA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAId,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAfY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,0DAC4CC,UAAUH,GADtD,sDAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGEA,EAAKC,OAHP,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARxB,kBAaTM,GAbS,4CAAD,sDCeLO,EAZK,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAExB,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHb,SAACA,GAAY,IAAD,EACRd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAmBlC,OAdAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAIR,CAACpB,IAEIqB,EDdqBM,CAAa3B,GAA7Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAMnB,OACI,qCACA,6BAAKpB,IACJoB,GAAW,2CACV,qBAAKJ,UAAU,YAAf,SAIUH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEOA,GADEA,EAAIC,aEatBiB,MA/Bf,WAAyB,IAAD,EAGgB1C,mBAAS,CAAC,aAH1B,mBAGb2C,EAHa,KAGD5C,EAHC,KAQpB,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEO4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MClB1B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.1cb56904.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';  \r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputvalue, setinputvalue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setinputvalue(e.target.value);\r\n    }\r\n    const handlesumit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputvalue.trim().length>2){\r\n        setCategories(cats=>[inputvalue,...cats]);\r\n        setinputvalue('');\r\n    }\r\n    }\r\n    return (\r\n        <form onSubmit={handlesumit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputvalue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired// typo de dato\r\n}\r\n\r\n","export const getgifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=Wi20wD4KXGqip9U43WujbFDbH9dOWJdQ`;\r\n    const resp= await fetch(url);\r\n    const {data}=await resp.json();\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    \r\n    return (gifs);\r\n}","import React from 'react'\r\n\r\n\r\nconst GifGridItem = ({title,url}) => {\r\n    //console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifGridItem\r\n","import React from 'react';  // use effect codigo condicional\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n//import { getGifs } from './helpers/getgifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n  \r\n    const {data:images,loading}=useFetchGifs(category);\r\n    \r\n  \r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>loading...</p> }\r\n        { <div className=\"card-grid\">\r\n            \r\n            \r\n                {\r\n                    images.map((img=>\r\n                        <GifGridItem        \r\n                            key={img.id}\r\n                           {...img }\r\n                            />\r\n\r\n                    ))\r\n                }\r\n            \r\n        </div> }\r\n        </>\r\n        \r\n    )\r\n}\r\n//api.giphy.com/v1/gifs/search\r\n//Wi20wD4KXGqip9U43WujbFDbH9dOWJdQ","import { useState,useEffect } from \"react\"\r\nimport { getgifs } from \"../helpers/getgifs\";\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(()=>{\r\n        getgifs(category)\r\n        .then(imgs=>{\r\n            setTimeout(()=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            },3000)\r\n            \r\n        })\r\n\r\n    },[category])\r\n   \r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './GifGrid'\r\n\r\n\r\nfunction GifExpertApp() {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['one puch'])\r\n  //  const handleAdd=()=>{\r\n            //setCategories([...categories,'HunterXHunter']);\r\n    //        setCategories(cats=>[...cats,'HunterXHunter']);\r\n    //}\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={setCategories}/>\r\n          <hr/> \r\n          \r\n          <ol> \r\n                {\r\n                 categories.map(category=>\r\n                     <GifGrid \r\n                     key={category}\r\n                     category={category} />\r\n                 )   \r\n                }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n//GifExpertApp.propTypes = {\r\n\r\n//}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n    <GifExpertApp/>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}